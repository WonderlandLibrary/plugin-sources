package me.frep.vulcan.spigot.exempt.type;

import org.bukkit.util.NumberConversions;
import java.util.function.Predicate;
import me.frep.vulcan.spigot.util.BlockUtil;
import org.bukkit.GameMode;
import me.frep.vulcan.spigot.Vulcan;
import io.github.retrooper.packetevents.utils.player.ClientVersion;
import me.frep.vulcan.spigot.util.PlayerUtil;
import me.frep.vulcan.spigot.config.Config;
import me.frep.vulcan.spigot.util.ServerUtil;
import me.frep.vulcan.spigot.data.PlayerData;
import java.util.function.Function;

public enum ExemptType
{
    TPS(data -> ServerUtil.getTPS() < 19.25), 
    CHUNK(data -> !data.getPlayer().getWorld().isChunkLoaded(NumberConversions.floor(data.getPositionProcessor().getX()) >> 4, NumberConversions.floor(data.getPositionProcessor().getZ()) >> 4)), 
    JOINED(data -> System.currentTimeMillis() - data.getJoinTime() < Config.JOIN_CHECK_WAIT_TIME || data.getActionProcessor().getPositionTicksExisted() < Config.MIN_TICKS_EXISTED), 
    CAKE(data -> data.getPositionProcessor().isNearCake()), 
    BAMBOO(data -> data.getPositionProcessor().isNearBamboo()), 
    ENTITY_CRAM_FIX(data -> Config.ENTITY_CRAM_FIX_ENABLED && data.getPositionProcessor().getSinceFuckingEntityTicks() < Config.ENTITY_CRAM_FIX_EXEMPT_TICKS), 
    AROUND_SLIME(data -> data.getPositionProcessor().getSinceAroundSlimeTicks() < 20), 
    SIGN(data -> data.getPositionProcessor().isNearSign()), 
    PRESSURE_PLATE(data -> data.getPositionProcessor().isNearPressurePlate()), 
    SWIMMING(data -> ServerUtil.isHigherThan1_9() && data.getPositionProcessor().getSinceSwimmingTicks() < 40), 
    SWIMMING_JESUS(data -> ServerUtil.isHigherThan1_9() && data.getPositionProcessor().getSinceSwimmingTicks() < 5), 
    COLLIDING_HORIZONTALLY(data -> data.getPositionProcessor().isCollidingHorizontally()), 
    DRIPSTONE(data -> data.getPositionProcessor().isNearDripstone()), 
    HIGH_FLY_SPEED(data -> data.getPositionProcessor().getSinceHighFlySpeedTicks() < 100), 
    GLITCHED_BLOCKS_ABOVE(data -> data.getPositionProcessor().getGlitchedBlocksAbove() != null && !data.getPositionProcessor().getGlitchedBlocksAbove().stream().allMatch(BlockUtil::isAir)),
    PROJECTILE_DAMAGE(data -> data.getActionProcessor().getSinceProjectileDamageTicks() < 20), 
    CHEST(data -> data.getPositionProcessor().isNearChest()), 
    ATTACK_DAMAGE(data -> data.getActionProcessor().getSinceAttackDamageTicks() < 80),
    SKULL(data -> data.getPositionProcessor().isNearSkull()), 
    EXPLOSION(data -> data.getActionProcessor().getSinceExplosionDamageTicks() < 50), 
    STAIRS(data -> data.getPositionProcessor().isNearStair()), 
    HIGH_LEVITATION(data -> ServerUtil.isHigherThan1_9() && data.getActionProcessor().getLevitationAmplifier() > 10), 
    FENCE_GATE(data -> data.getPositionProcessor().isNearFenceGate()), 
    POWDER_SNOW(data -> data.getPositionProcessor().isNearPowderSnow()), 
    DRAGON_DAMAGE(data -> data.getActionProcessor().getSinceDragonDamageTicks() < 60), 
    JUMP_BOOST_RAN_OUT(data -> data.getPositionProcessor().getSinceJumpBoostTicks() > 0 && data.getPositionProcessor().getSinceJumpBoostTicks() < 30), 
    LAGGED_NEAR_GROUND(data -> (data.getPositionProcessor().isNearGround() || !data.getPositionProcessor().isAirBelow()) && data.getConnectionProcessor().isFast()), 
    SNOW(data -> data.getPositionProcessor().isNearSnow()), 
    NETHERITE_ARMOR(data -> PlayerUtil.isWearingNetherite(data.getPlayer())), 
    FAST_ZERO(data -> data.getPositionProcessor().getDeltaY() == 0.0 && data.getConnectionProcessor().isFast()), 
    JOINED_CHUNK_LOAD(data -> System.currentTimeMillis() - data.getJoinTime() < 30000L && data.getPositionProcessor().getDeltaY() < -0.05000000074505806 && data.getPositionProcessor().getDeltaY() > -0.10000000149011612), 
    NEAR_SOLID(data -> data.getPositionProcessor().isNearSolid()), 
    CAMPFIRE(data -> data.getPositionProcessor().isNearCampfire()), 
    CANCELLED_MOVE(data -> data.getActionProcessor().getSinceCancelledMoveTicks() < 5), 
    CARPET(data -> data.getPositionProcessor().isNearCarpet()), 
    FLOWER_POT(data -> data.getPositionProcessor().isNearFlowerPot()), 
    EMPTIED_BUCKET(data -> data.getActionProcessor().getSinceBucketEmptyTicks() < 15), 
    END_ROD(data -> data.getPositionProcessor().isNearEndRod()), 
    HOPPER(data -> data.getPositionProcessor().isNearHopper()), 
    CHAIN(data -> data.getPositionProcessor().isNearChain()), 
    DOOR(data -> data.getPositionProcessor().isNearDoor()), 
    PICKED_UP_ITEM(data -> Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastItemPickup() < 30), 
    ANVIL(data -> data.getPositionProcessor().isNearAnvil()), 
    LAGGED_NEAR_GROUND_MODERN(data -> ServerUtil.isHigherThan1_13() && data.getConnectionProcessor().getFlyingDelay() < 10L && (data.getPositionProcessor().isNearGroundModern() || !data.getPositionProcessor().isAirBelow())), 
    FULLY_SUBMERGED(data -> data.getPositionProcessor().isFullySubmerged()), 
    RESPAWN(data -> Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastRespawn() < 20), 
    ICE(data -> data.getPositionProcessor().getSinceNearIceTicks() < 20 || data.getPositionProcessor().isNearIce()), 
    BED(data -> data.getPositionProcessor().isNearBed() || data.getPositionProcessor().getSinceNearBedTicks() < 30), 
    SLAB(data -> data.getPositionProcessor().isNearSlab()), 
    HIGH_JUMP_BOOST(data -> data.getActionProcessor().getJumpBoostAmplifier() > 2), 
    LILY_PAD(data -> data.getPositionProcessor().isNearLilyPad()), 
    HIGH_SPEED(data -> data.getActionProcessor().getSpeedAmplifier() > 5), 
    WALL(data -> data.getPositionProcessor().isNearWall()), 
    SWEET_BERRIES(data -> data.getPositionProcessor().isNearSweetBerries()), 
    CONDUIT(data -> data.getPositionProcessor().isNearConduit()), 
    PLACED_WEB(data -> data.getActionProcessor().getSinceWebPlaceTicks() < 25), 
    PISTON(data -> data.getPositionProcessor().isNearPiston() || data.getPositionProcessor().getSinceNearPistonTicks() < 20), 
    CHORUS_FRUIT(data -> data.getActionProcessor().getSinceChorusFruitTeleportTicks() < 25), 
    ENDER_PEARL(data -> data.getActionProcessor().getSinceEnderPearlTicks() < 4), 
    NEAR_GROUND(data -> data.getPositionProcessor().isNearGround()), 
    SLEEPING(data -> data.getPlayer().isSleeping() || Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastBedEnter() < 40 || Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastBedLeave() < 40), 
    SOUL_SPEED(data -> ServerUtil.isHigherThan1_16() && data.getPositionProcessor().getSinceSoulSpeedTicks() < 60), 
    TRAPDOOR(data -> data.getPositionProcessor().getSinceTrapdoorTicks() < 20), 
    FISHING_ROD(data -> ServerUtil.isHigherThan1_9() && data.getPositionProcessor().getSinceFishingRodTicks() < 100), 
    PLUGIN_LOAD(data -> System.currentTimeMillis() - Vulcan.INSTANCE.getStartTime() < 10000L), 
    RIPTIDE(data -> ServerUtil.isHigherThan1_13() && data.getPositionProcessor().getSinceRiptideTicks() < 80), 
    FIREWORK(data -> ServerUtil.isHigherThan1_9() && data.getPositionProcessor().getSinceFireworkTicks() < 150), 
    SPECTATOR(data -> ServerUtil.isHigherThan1_8() && (data.getPlayer().getGameMode() == GameMode.SPECTATOR || data.getPlayer().getGameMode() == GameMode.SPECTATOR)), 
    CAULDRON(data -> data.getPositionProcessor().isNearCauldron()), 
    ENTITY_COLLISION(data -> Config.ENTITY_COLLISION_FIX && data.getPositionProcessor().getSinceEntityCollisionTicks() < 8), 
    DEATH(data -> data.getActionProcessor().getSinceDeathTicks() < 25), 
    DEPTH_STRIDER(data -> data.getActionProcessor().isWearingDepthStrider() && data.getPositionProcessor().getSinceLiquidTicks() < 30), 
    LEVITATION(data -> ServerUtil.isHigherThan1_9() && data.getPositionProcessor().getSinceLevitationTicks() < 75), 
    FROZEN(data -> data.getPositionProcessor().isFrozen()), 
    DIGGING(data -> Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastDiggingTick() < 20 || Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastBukkitDiggingTick() < 20), 
    BLOCK_BREAK(data -> data.getActionProcessor().getSinceBlockBreakTicks() < 25), 
    PLACING(data -> data.getActionProcessor().getSinceBlockPlaceTicks() < 10), 
    SPEED_RAN_OUT(data -> data.getPositionProcessor().getSinceSpeedTicks() < 30 && data.getPositionProcessor().getSinceSpeedTicks() > 0), 
    ATTRIBUTE_MODIFIER(data -> data.getPositionProcessor().getSinceAttributeModifierTicks() < 80), 
    SERVER_POSITION(data -> data.getActionProcessor().getSinceTeleportTicks() < 8), 
    SERVER_POSITION_FAST(data -> data.getActionProcessor().getSinceTeleportTicks() < 5), 
    SERVER_POSITION_FAST_FAST(data -> data.getActionProcessor().getSinceTeleportTicks() < 3), 
    CANCELLED_PLACE(data -> data.getActionProcessor().getSinceCancelledPlaceTicks() < 40), 
    BLOCK_PLACE(data -> data.getActionProcessor().getSinceBlockPlaceTicks() < 30), 
    BLOCK_PLACE_FAST(data -> data.getActionProcessor().getSinceBlockPlaceTicks() < 15), 
    SWIMMING_ON_OLD_VERSION(data -> data.getPositionProcessor().getSinceLiquidTicks() < 60 && PlayerUtil.getClientVersion(data.getPlayer()) != null && PlayerUtil.getClientVersion(data.getPlayer()).isNewerThanOrEquals(ClientVersion.v_1_13) && ServerUtil.isLowerThan1_13()), 
    FULLY_STUCK(data -> data.getPositionProcessor().isFullyStuck()), 
    PLACED_CLIMBABLE(data -> data.getActionProcessor().getSinceClimbablePlaceTicks() < 30), 
    PARTIALLY_STUCK(data -> data.getPositionProcessor().isPartiallyStuck()), 
    NOT_MOVING(data -> !data.getPositionProcessor().isMoving()), 
    PLACED_SLIME(data -> data.getActionProcessor().getSinceSlimePlaceTicks() < 120), 
    FIREBALL(data -> data.getActionProcessor().getSinceFireballDamageTicks() < 25), 
    WORLD_CHANGE(data -> data.getActionProcessor().getSinceWorldChangeTicks() < 40), 
    FALL_DAMAGE(data -> data.getActionProcessor().getSinceFallDamageTicks() < 40), 
    ILLEGAL_BLOCK(data -> data.getPositionProcessor().isNearDaylightSensor() || data.getPositionProcessor().isNearBrewingStand() || data.getPositionProcessor().isNearCarpet() || data.getPositionProcessor().isNearWall() || data.getPositionProcessor().isNearSkull() || data.getPositionProcessor().isNearPortalFrame() || data.getPositionProcessor().isNearScaffolding() || data.getPositionProcessor().isNearCampfire()), 
    HONEY(data -> ServerUtil.isHigherThan1_9() && (data.getPositionProcessor().isNearHoney() || data.getPositionProcessor().getSinceHoneyTicks() < 30)), 
    SCAFFOLDING(data -> ServerUtil.isHigherThan1_9() && (data.getPositionProcessor().isNearScaffolding() || data.getPositionProcessor().getSinceNearScaffoldingTicks() < 30)), 
    HALF_BLOCK(data -> data.getPositionProcessor().isNearStair() || data.getPositionProcessor().isNearSlab()), 
    SHULKER(data -> data.getPositionProcessor().isNearShulker()), 
    GLIDING(data -> ServerUtil.isHigherThan1_9() && data.getPositionProcessor().getSinceGlidingTicks() < 40), 
    ELYTRA(data -> data.getActionProcessor().isWearingElytra() || data.getPositionProcessor().getSinceElytraTicks() < 100), 
    VELOCITY(data -> data.getVelocityProcessor().getTransactionFlyingTicks() < 40), 
    DEAD(data -> data.getPlayer().isDead()), 
    WEB(data -> data.getPositionProcessor().getSinceWebTicks() < 25 && data.getPositionProcessor().getDeltaY() < 0.1), 
    SOUL_SAND(data -> data.getPositionProcessor().isNearSoulSand()), 
    CINEMATIC(data -> Config.CINEMATIC && data.getRotationProcessor().isCinematic()), 
    FAST(data -> data.getConnectionProcessor().isFast()), 
    LENIENT_SCAFFOLDING(data -> Config.LENIENT_SCAFFOLDING && ServerUtil.isHigherThan1_9() && data.getActionProcessor().getDistanceFromLastScaffoldPlace() < 3.0 && data.getActionProcessor().getDistanceFromLastScaffoldPlace() > 0.0), 
    WINDOW_CLICK(data -> Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastWindowClick() < 15), 
    DROPPED_ITEM(data -> Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastDropItemTick() < 15), 
    CANCELLED_BREAK(data -> Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastCancelledBreak() < 40), 
    MYTHIC_MOB(data -> data.getActionProcessor().getSinceMythicMobTicks() < 50), 
    CREATIVE(data -> data.getPlayer().getGameMode() == GameMode.CREATIVE || data.getActionProcessor().getGameMode() == GameMode.CREATIVE), 
    AUTOCLICKER_NON_DIG(data -> data.getExemptProcessor().isExempt(ExemptType.PLACING, ExemptType.DIGGING, ExemptType.BLOCK_BREAK, ExemptType.FAST, ExemptType.DROPPED_ITEM, ExemptType.WINDOW_CLICK, ExemptType.CANCELLED_BREAK, ExemptType.CREATIVE) || data.getActionProcessor().getSinceGlassBottleFillTicks() < 15 || Vulcan.INSTANCE.getTickManager().getTicks() - data.getCombatProcessor().getLastItemFrame() < 20 || Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastProjectileThrow() < 20), 
    AUTOCLICKER(data -> data.getExemptProcessor().isExempt(ExemptType.PLACING, ExemptType.DIGGING, ExemptType.BLOCK_BREAK, ExemptType.FAST, ExemptType.DROPPED_ITEM, ExemptType.WINDOW_CLICK, ExemptType.CREATIVE, ExemptType.CANCELLED_BREAK) || System.currentTimeMillis() - data.getActionProcessor().getLastStartDestroy() < 110L || data.getPositionProcessor().getSinceFireworkTicks() < 20 || System.currentTimeMillis() - data.getClickProcessor().getLastInteractEntity() < 250L || data.getActionProcessor().getSinceGlassBottleFillTicks() < 15 || System.currentTimeMillis() - data.getActionProcessor().getLastAbort() < 110L || System.currentTimeMillis() - data.getActionProcessor().getLastStopDestroy() < 110L || Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastFishEvent() < 20 || Vulcan.INSTANCE.getTickManager().getTicks() - data.getActionProcessor().getLastProjectileThrow() < 20 || Vulcan.INSTANCE.getTickManager().getTicks() - data.getCombatProcessor().getLastItemFrame() < 20 || (data.getActionProcessor().getDistanceFromLastAbort() < 6.5 && data.getActionProcessor().getDistanceFromLastAbort() > 0.0)), 
    COLLIDING_VERTICALLY(data -> data.getPositionProcessor().getSinceCollidingVerticallyTicks() < 20), 
    SLOW_FALLING(data -> ServerUtil.isHigherThan1_9() && data.getPositionProcessor().getSinceSlowFallingTicks() < 40), 
    BUBBLE_COLUMN(data -> ServerUtil.isHigherThan1_9() && data.getPositionProcessor().getSinceBubbleColumnTicks() < 40), 
    FENCE(data -> data.getPositionProcessor().isNearFence() || data.getPositionProcessor().getSinceNearFenceTicks() < 7), 
    JUMP_BOOST(data -> data.getPositionProcessor().getSinceJumpBoostTicks() < 40), 
    FLIGHT(data -> data.getPlayer().getAllowFlight() || data.getPositionProcessor().getSinceFlyingTicks() < Config.FLIGHT_COOLDOWN), 
    COMBO_MODE(data -> data.getActionProcessor().getSinceAttackDamageTicks() < 25 && data.getPlayer().getMaximumNoDamageTicks() < 15), 
    DOLPHINS_GRACE(data -> ServerUtil.isHigherThan1_9() && (data.getPositionProcessor().getSinceDolphinsGraceTicks() < 50 || PlayerUtil.hasDolphinsGrace(data.getPlayer()))), 
    TELEPORT(data -> data.getActionProcessor().getSinceBukkitTeleportTicks() < 10 || data.getActionProcessor().isTeleporting()), 
    SERVER_VERSION(data -> ServerUtil.isHigherThan1_9()), 
    KELP(data -> data.getPositionProcessor().isNearKelp()), 
    CLIENT_VERSION(data -> PlayerUtil.getClientVersion(data.getPlayer()) != null && (PlayerUtil.getClientVersion(data.getPlayer()) == ClientVersion.UNRESOLVED || PlayerUtil.getClientVersion(data.getPlayer()).isNewerThanOrEquals(ClientVersion.v_1_9))), 
    SLIME(data -> data.getPositionProcessor().isNearSlime() || data.getPositionProcessor().getSinceNearSlimeTicks() < 65), 
    BOAT(data -> data.getPositionProcessor().isNearBoat()), 
    BUKKIT_VELOCITY(data -> data.getActionProcessor().getSinceBukkitVelocityTicks() < Config.MAX_VELOCITY_TICKS), 
    SEA_PICKLE(data -> data.getPositionProcessor().isNearSeaPickle()), 
    SEAGRASS(data -> data.getPositionProcessor().isNearSeaGrass()), 
    TURTLE_EGG(data -> data.getPositionProcessor().isNearTurtleEgg()), 
    SHULKER_BOX(data -> data.getPositionProcessor().isNearShulkerBox() || data.getPositionProcessor().getSinceNearShulkerBoxTicks() < 60), 
    WATERLOGGED(data -> ServerUtil.isHigherThan1_13() && data.getPositionProcessor().getSinceWaterLogTicks() < 30), 
    CLIMBABLE(data -> data.getPositionProcessor().isOnClimbable() || data.getPositionProcessor().isNearClimbable()), 
    LIQUID(data -> data.getPositionProcessor().getSinceLiquidTicks() < 25), 
    GLASS_PANE(data -> data.getPositionProcessor().isNearPane()), 
    FARMLAND(data -> data.getPositionProcessor().getSinceNearFarmlandTicks() < 20), 
    VEHICLE(data -> data.getPlayer().getVehicle() != null || data.getPositionProcessor().getSinceVehicleTicks() < 25), 
    VOID(data -> ServerUtil.isHigherThan1_18() ? (data.getPositionProcessor().getY() < -70.0) : (data.getPositionProcessor().getY() < 0.0));
    
    private final Function<PlayerData, Boolean> exception;
    
    private ExemptType(final Function<PlayerData, Boolean> exception) {
        this.exception = exception;
    }
    
    public Function<PlayerData, Boolean> getException() {
        return this.exception;
    }
}
